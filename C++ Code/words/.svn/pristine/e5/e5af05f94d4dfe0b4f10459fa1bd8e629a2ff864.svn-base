/**
 * Computer Programming 2 (COMP2711, COMP8801)
 * Practical 4: Words
 */

#include <iostream>
#include <string>
#include <unistd.h>
#include <bits/stdc++.h>

using namespace std;

struct WordInfo {
    string text;
    int count;
};

template <class T>
class MyVector {
public:
    typedef T* iterator; // creates an alias of the T* type called iterator
    MyVector() { }

    iterator begin() {
        return &items[0];
    }
    iterator end() {
        return &items[used];
    }
    int size() {
        return used;
    }
    iterator insert (iterator position, const T& item) {
        for (MyVector<T>::iterator i = &items[998]; i >= position; i--) {
            *i = *(i - 1);
        }
        *position = item;
        ++used;
        return position;
    }
private:
    T items[1000];
    int used = 0;
};

int main(int argc, char** argv) {

    enum {
        total,
        unique,
        individual
    } mode = total;

    for (int c; (c = getopt(argc, argv, "tui")) != -1;) {
        switch (c) {
            case 't':
                mode = total;
                break;
            case 'u':
                mode = unique;
                break;
            case 'i':
                mode = individual;
                break;
        }
    }
    argc -= optind;
    argv += optind;

    string word;
    int count = 0;
    vector <WordInfo>test;

    while (cin >> word) {
        count ++;
        int duplicate = 0;
        for (int i = 0; i < test.size(); i++) {
            if (test[i].text == word) {
                duplicate = 1;
                test[i].count += 1;
            }
        }
        if (!duplicate) {
            WordInfo newTest;
            newTest.text = word;
            newTest.count = 1;
            test.push_back(newTest);
        }
    }

    switch (mode) {

        case total:

            cout << "Total: " << count << '\n';
            break;

        case unique:

            cout << "Unique: " << test.size() << '\n';
            break;
        case individual:
            int size = test.size();
            for (int i = 0; i < size; i++) {
                for (int k = i + 1; k < size; k++) {
                    if (test[i].text > test[k].text) {
                        WordInfo middle = test[i];
                        test[i] = test[k];
                        test[k] = middle;
                    }
                }
            }
            for (int i = 0; i < size; i++) {

                cout <<test[i].text << ": " << test[i].count << endl;
            }
            break;
    }

    return 0;
}