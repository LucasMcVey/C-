/**
 * Computer Programming 2 (COMP2711, COMP8801)
 * Practical 2: Roman Numbers
 */

#include <iostream>
#include "cctype"
#include<bits/stdc++.h>

using namespace std;

int main(int argc, char *argv[])
{



    string input;

    string RomanUnits[] = {"", "I","II", "III", "IV", "V", "VI", "VII", "VIII", "IX"};

    string RomanTens[] = {"", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"};

    string RomanHundreds[] = {"", "C", "CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"};

    string RomanThousands[] = {"", "M", "MM", "MMM"};

    string ArabicNumbers[] = {"", "1", "2", "3", "4", "5", "6", "7", "8", "9"};

    int n = 0;
    int total =0;

        while (getline(cin, input)) {

            if(input.empty()) {
                return 0;

            }
            for (int i =9; i > 0; i--) {
                int s = ArabicNumbers[i].size();

                if (input.substr(n,s) == ArabicNumbers[i]){
                    total = total + i;



                }
            }


                transform(input.begin(), input.end(), input.begin(), ::toupper);
                for (int i =3; i > 0; i--) {



                    int s = RomanThousands[i].size();
                    if (input.substr(n,s) == RomanThousands[i])
                    {
                        total = total + i * 1000;

                        n = n + s;
                        int *p = &n;
                    }



                }

                for (int i =9; i > 0; i--) {

                    int s = RomanHundreds[i].size();
                    if (input.substr(n,s) == RomanHundreds[i])
                    {
                        total = total + i * 100;
                        n = n + s;
                        int *p = &n;
                    }

                }

                for (int i =9; i > 0; i--) {

                    int s = RomanTens[i].size();
                    if (input.substr(n,s) == RomanTens[i])
                    {

                        total = total + i * 10;
                        n = n + s;
                        int *p = &n;
                    }

                }


                for (int i =9; i > 0; i--) {

                    int s = RomanUnits[i].size();
                    if (input.substr(n,s) == RomanUnits[i])
                    {
                        total = total + i;
                        n = n + s;
                        int *p = &n;
                    }

                }
                cout << total << endl;
            n = n - n;
            total = total - total;



            }







     }




